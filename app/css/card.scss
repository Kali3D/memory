@mixin transformed($rotationY, $translationX) {
	transform: rotateY($rotationY) translateX($translationX);
}


//generation des classes fruit
//chaque classe affichera un sprite de l'image globale

$list: ('pommeRouge' 'banane' 'orange' 'citronVert' 'grenade' 'abricot' 'citronJaune' 'fraise' 'pommeVerte' 'peche' 'raisin' 'pasteque' 'prune' 'poire' 'cerise' 'framboise' 'mangue' 'bigarot');

@for $i from 1 through length($list) {
	.#{nth($list, $i)} {
		background: url('./images/cards.png') 0px ($i - 1)*-100px;
		background-size: cover;
	}
}

.card {
	width: 100px;
	height: 100px;
	margin: 20px;
	display: flex;
	align-items: center;
	justify-content: center;
	transition: transform 1s ease-in-out;
	img {
		width: 100%;
		height: auto;
		transform: rotateY(-180deg);
		//pour test, c'est plus facile de gagner :-);
		//opacity: 0.5;
	}
}

//cartes retournées
.hideCard {
	@include transformed(-180deg, -100vw);
}

.showCard {
	@include transformed(-180deg, 0vw);
}

//cartes découvertes
//ces 2 classes permettent d'éviter une rotation à 180° de l'image découverte lorsque les cartes quittent le plateau
.showDiscovered {
	@include transformed(0deg, 0vw);
}

.hideDiscovered {
	@include transformed(0deg, 100vw);
}

//animation découvre
@keyframes spin {
	from {
		@include transformed(-180deg, 0vw);
	}
	to {
		@include transformed(0deg, 0vw);
	}
}

.discover {
	animation: spin 0.5s linear forwards;
}
  

//animation recouvre
@-webkit-keyframes back {
	from {
		@include transformed(0deg, 0vw);
	}
	to {
		@include transformed(180deg, 0vw);
	}
}

.recover {
	animation: back 0.5s linear forwards;
}
